#region Copyright
// openLAMA is an open source platform which has been developed by the
// Swiss Kanton Basel Landschaft, with the goal of automating and managing
// large scale Covid testing programs or any other pandemic/viral infections.

// Copyright(C) 2021 Kanton Basel Landschaft, Switzerland
// This program is free software: you can redistribute it and/or modify
// it under the terms of the GNU Affero General Public License as published
// by the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU Affero General Public License for more details.
// See LICENSE.md in the project root for license information.
// You should have received a copy of the GNU Affero General Public License
// along with this program.  If not, see https://www.gnu.org/licenses/.
#endregion

// <auto-generated />
using System;
using Elyon.Fastly.Api.PostgresRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Elyon.Fastly.Api.PostgresRepositories.Migrations
{
    [DbContext(typeof(ApiContext))]
    [Migration("20210224162655_SeedCountryCantonCities")]
    partial class SeedCountryCantonCities
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("ApiDb")
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.2");

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Canton", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cantons");

                    b.HasData(
                        new
                        {
                            Id = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            CountryId = new Guid("506fcee9-0ae2-49fa-a0ff-f9d3ac6d68bb"),
                            Name = "Basel",
                            ShortName = "BL"
                        });
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.City", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CantonId")
                        .HasColumnType("uuid");

                    b.Property<Guid?>("CountryId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ZipCode")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("CantonId");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = new Guid("5afb5820-867d-4f37-be12-87457c0d3989"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Aesch (BL)",
                            ZipCode = "4147"
                        },
                        new
                        {
                            Id = new Guid("e8bcac88-70dd-4797-8b1f-ce9b5b920b30"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Allschwil",
                            ZipCode = "4123"
                        },
                        new
                        {
                            Id = new Guid("9f048cfb-9181-4a71-be06-421b1b0217a1"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Anwil",
                            ZipCode = "4469"
                        },
                        new
                        {
                            Id = new Guid("6113f133-7f1d-4044-8871-23c1dabf6fef"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Arboldswil",
                            ZipCode = "4424"
                        },
                        new
                        {
                            Id = new Guid("c76ee3a5-c352-41e1-a3b4-95e20a4dffe4"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Arisdorf",
                            ZipCode = "4422"
                        },
                        new
                        {
                            Id = new Guid("d2409d2f-f0c8-4dc5-b109-75ae812f3d0b"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Arlesheim",
                            ZipCode = "4144"
                        },
                        new
                        {
                            Id = new Guid("9d22d728-a81b-4bb7-8308-0f8e4fd86882"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Augst",
                            ZipCode = "4302"
                        },
                        new
                        {
                            Id = new Guid("edea27d6-4a91-4349-bc57-109be40c7153"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Bennwil",
                            ZipCode = "4431"
                        },
                        new
                        {
                            Id = new Guid("fd792e5d-925c-407f-aaaf-57cd5e438216"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Biel-Benken",
                            ZipCode = "4105"
                        },
                        new
                        {
                            Id = new Guid("8744e152-e041-45c6-9445-b60a766509e8"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Binningen",
                            ZipCode = "4101"
                        },
                        new
                        {
                            Id = new Guid("66b0488e-d5fd-438c-8317-aaa30c2b39ce"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Birsfelden",
                            ZipCode = "4127"
                        },
                        new
                        {
                            Id = new Guid("0a6fcf8a-764d-458f-b984-93880a5b1d24"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Blauen",
                            ZipCode = "4223"
                        },
                        new
                        {
                            Id = new Guid("2f230a58-d1dc-4028-840a-754830b00230"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Böckten",
                            ZipCode = "4461"
                        },
                        new
                        {
                            Id = new Guid("307d47a0-c1d6-42da-b567-71e9928ecf7a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Bottmingen",
                            ZipCode = "4103"
                        },
                        new
                        {
                            Id = new Guid("eb851c7a-555e-4e51-b3b6-235e04fef60f"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Bretzwil",
                            ZipCode = "4207"
                        },
                        new
                        {
                            Id = new Guid("55a2f047-2f11-4196-b831-e07893c79242"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Brislach",
                            ZipCode = "4225"
                        },
                        new
                        {
                            Id = new Guid("f8c9aca1-b327-4cef-b824-09c2e3864a4a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Bubendorf",
                            ZipCode = "4416"
                        },
                        new
                        {
                            Id = new Guid("bda65285-0cbd-4a50-9ea3-e5845ddfced4"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Buckten",
                            ZipCode = "4446"
                        },
                        new
                        {
                            Id = new Guid("4e9a9038-5723-4aa5-85bf-3010441452df"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Burg im Leimental",
                            ZipCode = "4117"
                        },
                        new
                        {
                            Id = new Guid("4ff276d2-467b-448a-9940-206cf99481f6"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Buus",
                            ZipCode = "4463"
                        },
                        new
                        {
                            Id = new Guid("093b7fb1-6be2-4930-8322-657696f38f4a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Diegten",
                            ZipCode = "4457"
                        },
                        new
                        {
                            Id = new Guid("d2f9dbe7-6ec3-4d53-9c59-c86ed4179307"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Diepflingen",
                            ZipCode = "4442"
                        },
                        new
                        {
                            Id = new Guid("57d8dbdf-0c9e-4ef2-86a3-a2e44b042a4d"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Dittingen",
                            ZipCode = "4243"
                        },
                        new
                        {
                            Id = new Guid("9d4b70cb-5053-4241-a429-817b883b7698"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Duggingen",
                            ZipCode = "4202"
                        },
                        new
                        {
                            Id = new Guid("5dd03835-d798-458a-bf79-4be8c8e6e916"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Eptingen",
                            ZipCode = "4458"
                        },
                        new
                        {
                            Id = new Guid("d0625eaf-4be1-4136-8672-44c4f3d5f213"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Ettingen",
                            ZipCode = "4107"
                        },
                        new
                        {
                            Id = new Guid("0cbf3423-e49f-4d90-804a-ee9dac849b58"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Frenkendorf",
                            ZipCode = "4402"
                        },
                        new
                        {
                            Id = new Guid("d9d8286b-568b-43c7-9fab-a85897496847"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Füllinsdorf",
                            ZipCode = "4414"
                        },
                        new
                        {
                            Id = new Guid("9038c099-f860-4015-8f8b-5262325ac239"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Gelterkinden",
                            ZipCode = "4460"
                        },
                        new
                        {
                            Id = new Guid("e0da3c86-90fa-498c-9245-3d4aa727bf70"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Giebenach",
                            ZipCode = "4304"
                        },
                        new
                        {
                            Id = new Guid("4d271b36-075e-41e0-9be2-ec537defc982"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Grellingen",
                            ZipCode = "4203"
                        },
                        new
                        {
                            Id = new Guid("862cd4f3-8777-41ab-84e0-d508397f81cd"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Häfelfingen",
                            ZipCode = "4445"
                        },
                        new
                        {
                            Id = new Guid("1f929496-6261-4f7b-bb69-b7632e6d6112"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Hemmiken",
                            ZipCode = "4465"
                        },
                        new
                        {
                            Id = new Guid("93af29c4-f57a-46d8-95b8-51c047e8a9cc"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Hersberg",
                            ZipCode = "4423"
                        },
                        new
                        {
                            Id = new Guid("cc37cd77-5999-459a-9377-3db6ec4a7dd1"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Hölstein",
                            ZipCode = "4434"
                        },
                        new
                        {
                            Id = new Guid("3a3c87df-a6ed-4f86-a878-6f8d1f9e6e2a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Itingen",
                            ZipCode = "4452"
                        },
                        new
                        {
                            Id = new Guid("f3dba01b-9b4c-4072-a550-33205980075a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Känerkinden",
                            ZipCode = "4447"
                        },
                        new
                        {
                            Id = new Guid("b2e0a3a4-150a-4c06-98e5-53b7a1e90250"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Kilchberg (BL)",
                            ZipCode = "4496"
                        },
                        new
                        {
                            Id = new Guid("22d6dca6-68cf-45d7-9419-2b569aa669c1"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Lampenberg",
                            ZipCode = "4432"
                        },
                        new
                        {
                            Id = new Guid("8df4e983-242c-42c3-acdb-f55d188f0182"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Langenbruck",
                            ZipCode = "4438"
                        },
                        new
                        {
                            Id = new Guid("3de7302e-05ae-46e2-b2bc-2bc1186dbf9d"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Läufelfingen",
                            ZipCode = "4448"
                        },
                        new
                        {
                            Id = new Guid("05dbc28f-b078-4b8b-95ac-a68a89ae081c"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Laufen",
                            ZipCode = "4242"
                        },
                        new
                        {
                            Id = new Guid("e7d67b51-edbc-4c06-9200-8c2c4aa6c2b5"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Lausen",
                            ZipCode = "4415"
                        },
                        new
                        {
                            Id = new Guid("02f9ca33-252f-49bd-8f9d-74b8e64a60dd"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Lauwil",
                            ZipCode = "4426"
                        },
                        new
                        {
                            Id = new Guid("98639c2e-d449-4033-bd8b-8b797e6690c3"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Liedertswil",
                            ZipCode = "4436"
                        },
                        new
                        {
                            Id = new Guid("4ef4d901-1a2e-4d9a-bf99-bfb8933d822f"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Liesberg",
                            ZipCode = "4253"
                        },
                        new
                        {
                            Id = new Guid("b0bb4473-09d8-4778-9a18-7e8a5266bb89"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Liestal",
                            ZipCode = "4410"
                        },
                        new
                        {
                            Id = new Guid("696c6c43-355a-4a14-8c77-8d582af7665e"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Lupsingen",
                            ZipCode = "4419"
                        },
                        new
                        {
                            Id = new Guid("fcfe0b86-96e4-4160-94e5-8a710c22f64a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Maisprach",
                            ZipCode = "4464"
                        },
                        new
                        {
                            Id = new Guid("80eefe05-8b09-4813-b958-b43515164e97"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Münchenstein",
                            ZipCode = "4142"
                        },
                        new
                        {
                            Id = new Guid("1e2235fa-2eb5-4ef5-b5d7-40e39d5b33a3"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Muttenz",
                            ZipCode = "4132"
                        },
                        new
                        {
                            Id = new Guid("99161de4-2642-4cbc-bedd-68e196173f11"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Nenzlingen",
                            ZipCode = "4224"
                        },
                        new
                        {
                            Id = new Guid("ed784616-f93b-4e1e-8058-c0dab3c817ac"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Niederdorf",
                            ZipCode = "4435"
                        },
                        new
                        {
                            Id = new Guid("3e541c57-d978-4699-8e9d-0d2dde1612fe"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Nusshof",
                            ZipCode = "4453"
                        },
                        new
                        {
                            Id = new Guid("e22995eb-d23b-486e-8ba5-09962d0fef86"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Oberdorf (BL)",
                            ZipCode = "4436"
                        },
                        new
                        {
                            Id = new Guid("b791e3a5-8ecb-4717-8f26-5a96c5499c33"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Oberwil (BL)",
                            ZipCode = "4104"
                        },
                        new
                        {
                            Id = new Guid("30654687-75c8-46df-9927-2b3d8f05451e"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Oltingen",
                            ZipCode = "4494"
                        },
                        new
                        {
                            Id = new Guid("8ca22c69-4d8f-4a02-b9d1-5b8738d96544"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Ormalingen",
                            ZipCode = "4466"
                        },
                        new
                        {
                            Id = new Guid("c63b1be1-e947-48da-b260-d81490b4f3df"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Pfeffingen",
                            ZipCode = "4148"
                        },
                        new
                        {
                            Id = new Guid("6a4a21bd-4048-4963-b523-68cc576f3fd2"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Pratteln",
                            ZipCode = "4133"
                        },
                        new
                        {
                            Id = new Guid("2f4f7532-95cf-4e76-a071-72395cb4ed54"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Ramlinsburg",
                            ZipCode = "4433"
                        },
                        new
                        {
                            Id = new Guid("a6bc0eee-5bad-4903-b305-250500097454"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Reigoldswil",
                            ZipCode = "4418"
                        },
                        new
                        {
                            Id = new Guid("c53959f5-3965-4107-8397-61fa30f95078"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Reinach (BL)",
                            ZipCode = "4153"
                        },
                        new
                        {
                            Id = new Guid("17bb259a-f67d-41c4-91a3-12438a0ec165"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Rickenbach (BL)",
                            ZipCode = "4462"
                        },
                        new
                        {
                            Id = new Guid("d3ece47c-8897-4fa7-b01d-bd4e971a2fe7"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Roggenburg",
                            ZipCode = "2814"
                        },
                        new
                        {
                            Id = new Guid("52a9cfe2-badc-437b-b314-f37429bf93c4"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Röschenz",
                            ZipCode = "4244"
                        },
                        new
                        {
                            Id = new Guid("7684c2d6-522b-4ddc-8e48-b80c7c6aefab"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Rothenfluh",
                            ZipCode = "4467"
                        },
                        new
                        {
                            Id = new Guid("055fc7ed-0866-4b62-8f36-495f36aee376"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Rümlingen",
                            ZipCode = "4444"
                        },
                        new
                        {
                            Id = new Guid("71d14d25-4828-4722-b7e3-23dcecbc4c55"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Rünenberg",
                            ZipCode = "4497"
                        },
                        new
                        {
                            Id = new Guid("bfce7a8b-5a63-4390-bfd3-40851aa70432"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Schönenbuch",
                            ZipCode = "4124"
                        },
                        new
                        {
                            Id = new Guid("6b1fa92a-0c87-46ab-bbb5-c0ff959cba64"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Seltisberg",
                            ZipCode = "4411"
                        },
                        new
                        {
                            Id = new Guid("2260f643-e9d1-4183-871e-3feded0e9baf"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Sissach",
                            ZipCode = "4450"
                        },
                        new
                        {
                            Id = new Guid("4440a17b-46f0-4996-94da-c79745bab540"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Tecknau",
                            ZipCode = "4492"
                        },
                        new
                        {
                            Id = new Guid("9f3d84f6-d034-462b-a876-07342b8eef6a"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Tenniken",
                            ZipCode = "4456"
                        },
                        new
                        {
                            Id = new Guid("6a96993f-8820-4b88-9ed8-da65ed35ecb9"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Therwil",
                            ZipCode = "4106"
                        },
                        new
                        {
                            Id = new Guid("aba7b68f-9cc5-4b7a-bf21-10ea575aa385"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Thürnen",
                            ZipCode = "4441"
                        },
                        new
                        {
                            Id = new Guid("9d2d46f2-4141-4103-b18b-0089890e7066"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Titterten",
                            ZipCode = "4425"
                        },
                        new
                        {
                            Id = new Guid("81676a54-cdba-4e94-b48b-4c3d11b986a3"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Wahlen",
                            ZipCode = "4246"
                        },
                        new
                        {
                            Id = new Guid("677d2118-6959-4839-bd79-4e7554c7f35c"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Waldenburg",
                            ZipCode = "4437"
                        },
                        new
                        {
                            Id = new Guid("ee3e36e0-f818-4cc8-9d9c-46a5aace9453"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Wenslingen",
                            ZipCode = "4493"
                        },
                        new
                        {
                            Id = new Guid("d6e6b8f6-784d-4ec0-b04b-469aff6916e1"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Wintersingen",
                            ZipCode = "4451"
                        },
                        new
                        {
                            Id = new Guid("f96b2284-aa83-4ea0-ade8-b5e4e43aa177"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Wittinsburg",
                            ZipCode = "4443"
                        },
                        new
                        {
                            Id = new Guid("6fe584e8-c04a-44e5-8880-10a31ca792c4"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Zeglingen",
                            ZipCode = "4495"
                        },
                        new
                        {
                            Id = new Guid("5af9c867-e61f-432b-b13a-f999327eac71"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Ziefen",
                            ZipCode = "4417"
                        },
                        new
                        {
                            Id = new Guid("979a54e7-f589-44df-8e76-630d464c0122"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Zunzgen",
                            ZipCode = "4455"
                        },
                        new
                        {
                            Id = new Guid("6408c97c-dc04-491b-af96-0c05927989e0"),
                            CantonId = new Guid("13f87683-8736-49e3-9a96-bceafb2d6846"),
                            Name = "Zwingen",
                            ZipCode = "4222"
                        });
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Country", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("ShortName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("character varying(20)");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = new Guid("506fcee9-0ae2-49fa-a0ff-f9d3ac6d68bb"),
                            Name = "Schweiz",
                            ShortName = "CH"
                        });
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.LamaCompany", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("RoleType")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("LamaCompanies");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Organization", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<Guid>("CityId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("EpaadId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("FirstTestTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<DateTime>("LastUpdatedOn")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<int>("NumberOfPools")
                        .HasColumnType("integer");

                    b.Property<int>("NumberOfSamples")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("OnboardingTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("OrganizationTypeId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("SecondTestTimestamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.Property<Guid>("SupportPersonId")
                        .HasColumnType("uuid");

                    b.Property<string>("Zip")
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("OrganizationTypeId");

                    b.HasIndex("SupportPersonId");

                    b.ToTable("Organizations");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.OrganizationType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("OrganizationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Company"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Pharmacy"
                        },
                        new
                        {
                            Id = 3,
                            Name = "School"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Nursing Home"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Hospital"
                        });
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("LamaCompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<Guid?>("OrganizationId")
                        .HasColumnType("uuid");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.HasIndex("LamaCompanyId");

                    b.HasIndex("OrganizationId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.UserConfirmationToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("ExpirationTimeStamp")
                        .HasColumnType("timestamp without time zone");

                    b.Property<bool>("IsUsed")
                        .HasColumnType("boolean");

                    b.Property<string>("Token")
                        .HasColumnType("text");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserConfirmationTokens");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Canton", b =>
                {
                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.Country", "Country")
                        .WithMany("Cantons")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.City", b =>
                {
                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.Canton", "Canton")
                        .WithMany("Cities")
                        .HasForeignKey("CantonId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Canton");

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Organization", b =>
                {
                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.City", "City")
                        .WithMany()
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.OrganizationType", "OrganizationType")
                        .WithMany("Organizations")
                        .HasForeignKey("OrganizationTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.User", "SupportPerson")
                        .WithMany("SupportOrganizations")
                        .HasForeignKey("SupportPersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("OrganizationType");

                    b.Navigation("SupportPerson");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.User", b =>
                {
                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.LamaCompany", "LamaCompany")
                        .WithMany("Users")
                        .HasForeignKey("LamaCompanyId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.Organization", "Organization")
                        .WithMany("Contacts")
                        .HasForeignKey("OrganizationId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("LamaCompany");

                    b.Navigation("Organization");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.UserConfirmationToken", b =>
                {
                    b.HasOne("Elyon.Fastly.Api.PostgresRepositories.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Canton", b =>
                {
                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Country", b =>
                {
                    b.Navigation("Cantons");

                    b.Navigation("Cities");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.LamaCompany", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.Organization", b =>
                {
                    b.Navigation("Contacts");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.OrganizationType", b =>
                {
                    b.Navigation("Organizations");
                });

            modelBuilder.Entity("Elyon.Fastly.Api.PostgresRepositories.Entities.User", b =>
                {
                    b.Navigation("SupportOrganizations");
                });
#pragma warning restore 612, 618
        }
    }
}
